% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformations.R
\name{project_vector_into_plane}
\alias{project_vector_into_plane}
\title{Project a vector into a plane (remove normal component)}
\usage{
project_vector_into_plane(v, plane_normal)
}
\arguments{
\item{v}{Numeric vector: the vector to project.}

\item{plane_normal}{Numeric vector: the plane's normal (same length as \code{v}; need not be unit).}
}
\value{
A numeric vector (same length as \code{v}) representing the projection of \code{v} into the plane.
}
\description{
Returns the component of vector \code{v} that lies within the plane whose normal is
\code{plane_normal}. The normal need not be unit length.
}
\details{
Mathematically: \code{v_in_plane = v - ((v·n)/(n·n)) n}.

\itemize{
\item If \code{plane_normal} is unit length, the term \code{(v·n)/(n·n)} simplifies to \code{v·n}.
\item This is a rigid \emph{projection} (not a rotation); the returned vector generally has a smaller magnitude than \code{v}.
}
}
\examples{
# 3D example: drop the z-component (plane is xy-plane, normal = (0,0,1))
project_vector_into_plane(c(1, 2, 3), c(0, 0, 1))
# -> c(1, 2, 0)

# Arbitrary plane normal (not unit):
v  <- c(1, 2, 3)
n  <- c(0, 1, -1)         # plane normal
v_plane <- project_vector_into_plane(v, n)
# v decomposes as v_plane (in-plane) + v_normal (along n)

}
