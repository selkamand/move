% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chemistrycalcs.R
\name{compute_abcd_bond_angle}
\alias{compute_abcd_bond_angle}
\title{Compute atomic position from dihedral parameters}
\usage{
compute_abcd_bond_angle(a, b, c, bond_angle, bond_length, torsion_angle)
}
\arguments{
\item{a}{Numeric vector of length 3 giving the xyz coordinates of atom A.}

\item{b}{Numeric vector of length 3 giving the xyz coordinates of atom B.}

\item{c}{Numeric vector of length 3 giving the xyz coordinates of atom C.}

\item{bond_angle}{Numeric scalar giving the B-C-D bond angle in degrees.}

\item{bond_length}{Numeric scalar giving the C-D bond length.}

\item{torsion_angle}{Numeric scalar giving the A-B-C-D torsion angle in degrees.}
}
\value{
A numeric vector of length 3 giving the computed xyz coordinates of atom D.
}
\description{
Calculates the position of atom D in an A-B-C-D molecular geometry given
the positions of atoms A, B, C and the desired bond angle, bond length,
and torsion angle parameters.
}
\details{
This function uses the \code{compas::calCo} function to compute the position
of atom D based on the three preceding atoms (A, B, C) and the specified
geometric parameters. The function is useful for building molecular structures
or validating dihedral angle calculations.
}
\examples{
# Define first three atoms
a <- c(0, 0, 0)
b <- c(1, 0, 0)
c <- c(1, 1, 0)

# Compute position of fourth atom with specific geometry
d <- compute_abcd_bond_angle(a, b, c, bond_angle = 109.5, bond_length = 1.5, torsion_angle = 60)
print(d)

# Verify the result using compute_abcd_dihedral_stats
stats <- compute_abcd_dihedral_stats(a, b, c, d)
print(stats)

}
\seealso{
\code{\link{compute_abcd_dihedral_stats}} for computing dihedral
parameters from atomic positions.
}
