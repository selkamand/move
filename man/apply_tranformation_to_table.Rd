% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformations.R
\name{apply_tranformation_to_table}
\alias{apply_tranformation_to_table}
\title{Apply a 3D transformation function to coordinate tables}
\usage{
apply_tranformation_to_table(table, f)
}
\arguments{
\item{table}{A data frame or matrix containing at least the columns
\code{x}, \code{y}, and \code{z}.}

\item{f}{A function that takes a numeric vector or named list of length 3
(\code{x}, \code{y}, \code{z}) and returns a structure (e.g., named numeric or list)
with elements \code{x}, \code{y}, and \code{z} in that order.}
}
\value{
A data frame with the same columns as \code{table}, but with the
\code{x}, \code{y}, and \code{z} coordinates replaced by the transformed values.
}
\description{
Applies a user-supplied transformation function to each row of a table
containing 3D coordinates (\code{x}, \code{y}, \code{z}), returning an updated table
with transformed coordinates.
}
\examples{
# Example: rotate points around Z-axis
rotate_z <- function(p) {
  angle <- pi / 4
  c(x = p["x"] * cos(angle) - p["y"] * sin(angle),
    y = p["x"] * sin(angle) + p["y"] * cos(angle),
    z = p["z"])
}

pts <- data.frame(x = c(1, 0), y = c(0, 1), z = 0)
apply_tranformation_to_table(pts, rotate_z)

}
